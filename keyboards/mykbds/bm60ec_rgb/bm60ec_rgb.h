/* Copyright 2020 MechMerlin
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#pragma once

#include "quantum.h"
//#include "via.h" // only for EEPROM address

enum custom_keycodes {
	KC_SECRET_1 = SAFE_RANGE,
	KC_SECRET_2,
	KC_SECRET_3,
	KC_SECRET_4,
	KC_SECRET_5,
	KC_SECRET_6,
	KC_SECRET_7,
	KC_SECRET_8,
	KC_SECRET_9,
	KC_SECRET_10,
	KC_SECRET_11,
	KC_SECRET_12,
	KC_SECRET_13,
	KC_SECRET_14,
	KC_SECRET_15,
	KC_SECRET_16,
	KC_SECRET_17,
	KC_SECRET_18,
	KC_SECRET_19,
	KC_SECRET_20,
	KC_SECRET_21,
	KC_SECRET_22,
	KC_SECRET_23,
	KC_SECRET_24,
	KC_SECRET_25,
	KC_SECRET_26,
	KC_SECRET_27,
	KC_SECRET_28,
	KC_SECRET_29,
	KC_SECRET_30,
    KC_SELW,
    KC_SELL,
    //MY_SELW,
    MY_WHR,
    MY_WHRC,
	//MY_WHRSQ,
	//MY_WHRDQ,
    //MY_WHRB,
    MY_IN,
    MY_INC,
    //MY_INSQ,
	//MY_INDQ,
	MY_LK,
	//MY_LKDQ,
    MY_SEL,
    MY_SQ,
    MY_DQ,
    MY_EQ,
    MY_JN1,
    MY_JN2,
   //MY_FJN,
    //MY_CJN,
    MY_ISN,
    //MY_ISNN,
    MY_PAR,
    //KC_CRBR,
    //KC_SQBR,
    KC_EQEQ,
    KC_MYESC,
    MY_UP,
    MY_DECL,
    //MY_DECV,
    MY_OB,
    MY_GB,
    //MY_HV,
    MY_AG1,
    MY_AG2,
    //MY_AGCT,
    //MY_AGMN,
    //MY_AGAV,
    //MY_AGMX,
    //MY_WSQ,
    //MY_WDQ,
    MY_WQ,
    MY_SYS
};

bool encoder_update_user(uint8_t index, bool clockwise);
bool encoder_update_kb(uint8_t index, bool clockwise);

/*
#define LAYOUT( \
    K00, K01, K02, K03, K04, K05, K06, K07, K08, K09, K0A, K0B, K0C, K0D, K21,       \
    K10,   K11, K12, K13, K14, K15, K16, K17, K18, K19, K1A, K1B, K1C, K1D,      \
    K20,   K22, K23, K24, K25, K26, K27, K28, K29, K2A, K2B, K2C, K2D,          \
    K31,       K32, K33, K34, K35, K36, K37, K38, K39, K3A, K3B,     K3C, K3D,   \
    K40,  K41,  K42,              K46,                K49, K4A, K4B, K4C, K4D    \
) { \
    { K00,   K01,   K02,   K03,   K04,   K05,   K06,   K07,   K08,   K09,   K0A,   K0B,   K0C,   K0D   }, \
    { K10,   K11,   K12,   K13,   K14,   K15,   K16,   K17,   K18,   K19,   K1A,   K1B,   K1C,   K1D   }, \
    { K20,   K21,   K22,   K23,   K24,   K25,   K26,   K27,   K28,   K29,   K2A,   K2B,   K2C,   K2D   }, \
    { KC_NO, K31,   K32,   K33,   K34,   K35,   K36,   K37,   K38,   K39,   K3A,   K3B,   K3C,   K3D   }, \
    { K40,   K41,   K42,   K43,   K44,   KC_NO, K46,   KC_NO, KC_NO, K49,   K4A,   K4B,   K4C,   K4D   }, \
}
*/
/*
#define LAYOUT( \
    K00, K01, K02, K03, K04, K05, K06, K07, K08, K09, K0A, K0B, K0C, K0D, K21, K43, K44,   \
    K10,   K11, K12, K13, K14, K15, K16, K17, K18, K19, K1A, K1B, K1C, K1D,                \
    K20,    K22, K23, K24, K25, K26, K27, K28, K29, K2A, K2B, K2C, K2D,                    \
    K31,       K32, K33, K34, K35, K36, K37, K38, K39, K3A, K3B,     K3C, K3D,             \
    K40,  K41,  K42,              K46,                K49, K4A, K4B, K4C, K4D              \
) { \
    { K00,   K01,   K02,   K03,   K04,   K05,   K06,   K07,   K08,   K09,   K0A,   K0B,   K0C,   K0D   }, \
    { K10,   K11,   K12,   K13,   K14,   K15,   K16,   K17,   K18,   K19,   K1A,   K1B,   K1C,   K1D   }, \
    { K20,   K21,   K22,   K23,   K24,   K25,   K26,   K27,   K28,   K29,   K2A,   K2B,   K2C,   K2D   }, \
    { KC_NO, K31,   K32,   K33,   K34,   K35,   K36,   K37,   K38,   K39,   K3A,   K3B,   K3C,   K3D   }, \
    { K40,   K41,   K42,   K43,   K44,   KC_NO, K46,   KC_NO, KC_NO, K49,   K4A,   K4B,   K4C,   K4D   }, \
}
*/

// generated by KBFirmware JSON to QMK Parser
// https://noroadsleft.github.io/kbf_qmk_converter/
